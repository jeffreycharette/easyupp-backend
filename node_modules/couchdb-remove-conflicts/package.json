{
  "name": "couchdb-remove-conflicts",
  "description": "CLI tool to remove all conflicts from a CouchDB database",
  "main": "index.js",
  "bin": {
    "couchdb-remove-conflicts": "./bin/couchdb-remove-conflicts.js"
  },
  "scripts": {
    "pretest": "standard",
    "test": "echo YOLO && exit 0",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gr2m/couchdb-remove-conflicts.git"
  },
  "keywords": [
    "couchdb"
  ],
  "author": {
    "name": "Gregor Martynus",
    "email": "gregor@martynus.net"
  },
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/gr2m/couchdb-remove-conflicts/issues"
  },
  "homepage": "https://github.com/gr2m/couchdb-remove-conflicts#readme",
  "dependencies": {
    "async": "^1.5.0",
    "minimist": "^1.2.0",
    "nano": "^6.1.5",
    "npmlog": "^2.0.0",
    "lodash": "^3.10.1"
  },
  "devDependencies": {
    "standard": "^5.4.1",
    "semantic-release": "^6.0.3"
  },
  "version": "1.0.1",
  "readme": "# couchdb-remove-conflicts\n\n> CLI tool to remove all conflicts from a CouchDB database\n\n## CLI Usage\n\n```bash\n# npm install --global couchdb-remove-conflicts\ncouchdb-remove-conflicts <url>\n```\n\n## Module Usage\n\n```js\nvar couchdbRemoveConflicts = require('couchdb-remove-conflicts')\ncouchdbRemoveConflicts(url, function (error, result) {\n  if (error) {\n    throw error\n  }\n\n  console.log(result)\n})\n```\n\n## <url> option\n\nThe `<url>` CLI argument or `couchdbRemoveConflicts(url, callback)` option must\nbe a URL of a CouchDB database or CouchDB root.\n\nExamples\n\n- `http://localhost:5984/dbname`  \n  deletes all conflicts in `dbname`\n- `http://username:password@couch.example.com/dbname`  \n  deletes all conflicts in `dbname`, authenticates with `username:password`\n- `http://username:password@couch.example.com`  \n  deletes all conflicts in all databases at the given CouchDB url\n\n## How it work\n\nThe `url` option gets passed to [nano](https://github.com/dscape/nano#nano). If\nthe `url` is a CouchDB root, then all databases are fetched (one by one),\notherwise only the one for the passed URL.\n\nFor each database, all docs are fetched with `?include_docs=true&conflicts=true`\nand then separate `DELETE /<dbname>/<docid>?rev=<rev>` requests are sent for\nevery conflict, with max. 100 requests at once.\n\n## TODOs\n\n- [ ] add tests :)\n- [ ] add options to limit series of `DELETE` requests and database handling\n- [ ] allow to pass in username & password as `{auth: { username, password } }`\n\n## License\n\nApache-2\n",
  "readmeFilename": "README.md",
  "_id": "couchdb-remove-conflicts@1.0.1",
  "dist": {
    "shasum": "d0293efc31179627ec4d4d4f66f355b9ec234162"
  },
  "_from": "couchdb-remove-conflicts@",
  "_resolved": "https://registry.npmjs.org/couchdb-remove-conflicts/-/couchdb-remove-conflicts-1.0.1.tgz"
}
